# Generated by Django 3.2.7 on 2021-09-17 17:43

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[(1, 'james'), (2, 'kara')], max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='type_curves',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('time_on', models.IntegerField()),
                ('gas', models.FloatField()),
                ('oil', models.FloatField()),
                ('water', models.FloatField()),
                ('owner', models.CharField(max_length=255)),
                ('version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('name', 'time_on', 'owner', 'version')},
            },
        ),
        migrations.CreateModel(
            name='schedules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('deterministic', 'deterministic'), ('probabilistic', 'probabilistic')], max_length=25)),
                ('idp', models.CharField(max_length=255)),
                ('drill_start_date', models.DateField()),
                ('drill_end_date', models.DateField()),
                ('compl_start_date', models.DateField()),
                ('compl_end_date', models.DateField()),
                ('prod_start_date', models.DateField()),
                ('simulation', models.IntegerField()),
                ('owner', models.CharField(max_length=255)),
                ('version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('scenario', 'idp', 'simulation', 'owner', 'version')},
            },
        ),
        migrations.CreateModel(
            name='schedule_log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_scenario', models.CharField(max_length=100)),
                ('schedule_owner', models.CharField(max_length=255)),
                ('schedule_version', models.DateTimeField()),
                ('schedule_file_scenario', models.CharField(max_length=100)),
                ('schedule_file_owner', models.CharField(max_length=255)),
                ('schedule_file_version', models.DateTimeField()),
                ('schedule_inputs_owner', models.CharField(max_length=255)),
                ('schedule_inputs_version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('schedule_scenario', 'schedule_owner', 'schedule_version')},
            },
        ),
        migrations.CreateModel(
            name='schedule_inputs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_group', models.CharField(max_length=50)),
                ('parameter', models.CharField(max_length=50)),
                ('unit', models.CharField(max_length=50)),
                ('value', models.CharField(max_length=50)),
                ('owner', models.CharField(max_length=255)),
                ('version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('input_group', 'parameter', 'owner', 'version')},
            },
        ),
        migrations.CreateModel(
            name='schedule_file',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(max_length=100)),
                ('rig', models.CharField(max_length=100)),
                ('pad', models.CharField(max_length=100)),
                ('input_group', models.CharField(max_length=100)),
                ('pad_start_date', models.DateField(blank=True, null=True)),
                ('pad_end_date', models.DateField(blank=True, null=True)),
                ('conductor_days', models.FloatField(blank=True, null=True)),
                ('mob_in_days', models.FloatField(blank=True, null=True)),
                ('drill_days', models.FloatField(blank=True, null=True)),
                ('mob_out_days', models.FloatField(blank=True, null=True)),
                ('logging_days', models.FloatField(blank=True, null=True)),
                ('build_fac_days', models.FloatField(blank=True, null=True)),
                ('frac_days', models.FloatField(blank=True, null=True)),
                ('flowback_days', models.FloatField(blank=True, null=True)),
                ('pod_size', models.IntegerField(blank=True, null=True)),
                ('drill_start_date', models.DateField(blank=True, null=True)),
                ('drill_end_date', models.DateField(blank=True, null=True)),
                ('compl_start_date', models.DateField(blank=True, null=True)),
                ('compl_end_date', models.DateField(blank=True, null=True)),
                ('prod_start_date', models.DateField(blank=True, null=True)),
                ('owner', models.CharField(max_length=255)),
                ('version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('scenario', 'rig', 'pad', 'owner', 'version')},
            },
        ),
        migrations.CreateModel(
            name='scenarios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('budget', 'budget'), ('field_assessment', 'field_assessment'), ('lookback', 'lookback'), ('miscellaneous', 'miscellaneous'), ('monthly_outlook_update', 'monthly_outlook_update'), ('rfa', 'rfa'), ('sensitivity', 'sensitivity')], max_length=100)),
                ('project', models.CharField(blank=True, max_length=100, null=True)),
                ('project_version', models.DateTimeField(blank=True, null=True)),
                ('properties', models.CharField(blank=True, max_length=100, null=True)),
                ('properties_version', models.DateTimeField(blank=True, null=True)),
                ('framework', models.CharField(blank=True, max_length=100, null=True)),
                ('framework_version', models.DateTimeField(blank=True, null=True)),
                ('schedule', models.CharField(blank=True, max_length=100, null=True)),
                ('schedule_version', models.DateTimeField(blank=True, null=True)),
                ('schedule_inputs_version', models.DateTimeField(blank=True, null=True)),
                ('economics', models.CharField(blank=True, max_length=100, null=True)),
                ('economics_version', models.DateTimeField(blank=True, null=True)),
                ('forecast', models.CharField(blank=True, max_length=100, null=True)),
                ('forecast_version', models.DateTimeField(blank=True, null=True)),
                ('price_deck', models.CharField(blank=True, max_length=100, null=True)),
                ('price_deck_version', models.DateTimeField(blank=True, null=True)),
                ('probability', models.CharField(blank=True, max_length=100, null=True)),
                ('probability_version', models.DateTimeField(blank=True, null=True)),
                ('owner', models.CharField(blank=True, max_length=100, null=True)),
                ('owner_version', models.DateTimeField(blank=True, null=True)),
                ('version', models.DateTimeField()),
                ('active', models.IntegerField()),
            ],
            options={
                'unique_together': {('scenario', 'owner', 'version')},
            },
        ),
        migrations.CreateModel(
            name='properties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(max_length=100)),
                ('budget_type', models.CharField(blank=True, choices=[('base', 'base'), ('wedge', 'wedge')], max_length=25, null=True)),
                ('idp', models.CharField(max_length=100)),
                ('cc_id', models.CharField(blank=True, max_length=255, null=True)),
                ('api14', models.CharField(blank=True, max_length=14, null=True)),
                ('cost_center', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=25, null=True)),
                ('reserve_cat', models.CharField(blank=True, max_length=5, null=True)),
                ('asset', models.CharField(blank=True, max_length=50, null=True)),
                ('field', models.CharField(blank=True, max_length=50, null=True)),
                ('short_pad', models.CharField(blank=True, max_length=100, null=True)),
                ('pad', models.CharField(blank=True, max_length=200, null=True)),
                ('schedule_order', models.IntegerField(blank=True, null=True)),
                ('depth', models.IntegerField(blank=True, null=True)),
                ('drill_start_date', models.DateField(blank=True, null=True)),
                ('drill_end_date', models.DateField(blank=True, null=True)),
                ('compl_start_date', models.DateField(blank=True, null=True)),
                ('compl_end_date', models.DateField(blank=True, null=True)),
                ('first_prod_date', models.DateField(blank=True, null=True)),
                ('owner', models.CharField(max_length=255)),
                ('version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('scenario', 'idp', 'owner', 'version')},
            },
        ),
        migrations.CreateModel(
            name='projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(max_length=255)),
                ('idp', models.CharField(max_length=255)),
                ('owner', models.CharField(max_length=255)),
                ('version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('scenario', 'idp', 'owner', 'version')},
            },
        ),
        migrations.CreateModel(
            name='prod_forecasts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(max_length=100)),
                ('idp', models.CharField(max_length=100)),
                ('prod_date', models.DateField()),
                ('gas', models.FloatField()),
                ('oil', models.FloatField()),
                ('water', models.FloatField()),
                ('owner', models.CharField(max_length=255)),
                ('version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('scenario', 'idp', 'prod_date', 'owner', 'version')},
            },
        ),
        migrations.CreateModel(
            name='probability_log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(max_length=100)),
                ('idp', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100, null=True)),
                ('simulation', models.IntegerField()),
                ('owner', models.CharField(max_length=255)),
                ('version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('scenario', 'idp', 'category', 'type', 'simulation', 'owner', 'version')},
            },
        ),
        migrations.CreateModel(
            name='probabilities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(max_length=100)),
                ('property_type', models.CharField(max_length=50)),
                ('property_value', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=100)),
                ('value', models.CharField(max_length=100)),
                ('owner', models.CharField(max_length=255)),
                ('version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('scenario', 'property_type', 'property_value', 'category', 'type', 'owner', 'version')},
            },
        ),
        migrations.CreateModel(
            name='pricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(max_length=100)),
                ('prod_date', models.DateField()),
                ('end_of_month', models.DateField()),
                ('hh', models.FloatField()),
                ('wti', models.FloatField()),
                ('cig', models.FloatField()),
                ('nwr', models.FloatField()),
                ('ngl', models.FloatField()),
                ('owner', models.CharField(max_length=255)),
                ('version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('scenario', 'prod_date', 'owner', 'version')},
            },
        ),
        migrations.CreateModel(
            name='output_onelines',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('deterministic', 'deterministic'), ('probabilistic', 'probabilistic')], max_length=25)),
                ('idp', models.CharField(max_length=100)),
                ('budget_type', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
                ('short_pad', models.CharField(max_length=100)),
                ('pad', models.CharField(max_length=200)),
                ('rig', models.CharField(max_length=100)),
                ('field', models.CharField(max_length=50)),
                ('irr', models.FloatField(blank=True, null=True)),
                ('payout', models.FloatField(blank=True, null=True)),
                ('year_1_roic', models.FloatField(blank=True, null=True)),
                ('year_1_fcf', models.FloatField(blank=True, null=True)),
                ('year_2_roic', models.FloatField(blank=True, null=True)),
                ('year_2_fcf', models.FloatField(blank=True, null=True)),
                ('pvr', models.FloatField(blank=True, null=True)),
                ('gas_eur', models.FloatField(blank=True, null=True)),
                ('oil_eur', models.FloatField(blank=True, null=True)),
                ('ip90', models.FloatField(blank=True, null=True)),
                ('gross_gas_mult', models.FloatField(blank=True, null=True)),
                ('gross_oil_mult', models.FloatField(blank=True, null=True)),
                ('gross_water_mult', models.FloatField(blank=True, null=True)),
                ('gross_gas', models.FloatField(blank=True, null=True)),
                ('gross_oil', models.FloatField(blank=True, null=True)),
                ('gross_water', models.FloatField(blank=True, null=True)),
                ('ngl_yield', models.FloatField(blank=True, null=True)),
                ('btu', models.FloatField(blank=True, null=True)),
                ('shrink', models.FloatField(blank=True, null=True)),
                ('wi', models.FloatField(blank=True, null=True)),
                ('nri', models.FloatField(blank=True, null=True)),
                ('royalty', models.FloatField(blank=True, null=True)),
                ('net_gas', models.FloatField(blank=True, null=True)),
                ('net_oil', models.FloatField(blank=True, null=True)),
                ('net_ngl', models.FloatField(blank=True, null=True)),
                ('net_mcfe', models.FloatField(blank=True, null=True)),
                ('royalty_gas', models.FloatField(blank=True, null=True)),
                ('royalty_oil', models.FloatField(blank=True, null=True)),
                ('royalty_ngl', models.FloatField(blank=True, null=True)),
                ('royalty_mcfe', models.FloatField(blank=True, null=True)),
                ('hh', models.FloatField(blank=True, null=True)),
                ('wti', models.FloatField(blank=True, null=True)),
                ('ngl', models.FloatField(blank=True, null=True)),
                ('cig', models.FloatField(blank=True, null=True)),
                ('nwr', models.FloatField(blank=True, null=True)),
                ('gas_basis', models.CharField(blank=True, max_length=10, null=True)),
                ('gas_price_adj', models.FloatField(blank=True, null=True)),
                ('oil_price_adj', models.FloatField(blank=True, null=True)),
                ('ngl_price_adj', models.FloatField(blank=True, null=True)),
                ('realized_gas_price', models.FloatField(blank=True, null=True)),
                ('realized_oil_price', models.FloatField(blank=True, null=True)),
                ('realized_ngl_price', models.FloatField(blank=True, null=True)),
                ('net_gas_rev', models.FloatField(blank=True, null=True)),
                ('net_oil_rev', models.FloatField(blank=True, null=True)),
                ('net_ngl_rev', models.FloatField(blank=True, null=True)),
                ('net_total_rev', models.FloatField(blank=True, null=True)),
                ('gross_drill_capex', models.FloatField(blank=True, null=True)),
                ('gross_compl_capex', models.FloatField(blank=True, null=True)),
                ('gross_misc_capex', models.FloatField(blank=True, null=True)),
                ('gross_aban_capex', models.FloatField(blank=True, null=True)),
                ('gross_total_capex', models.FloatField(blank=True, null=True)),
                ('net_drill_capex', models.FloatField(blank=True, null=True)),
                ('net_compl_capex', models.FloatField(blank=True, null=True)),
                ('net_misc_capex', models.FloatField(blank=True, null=True)),
                ('net_aban_capex', models.FloatField(blank=True, null=True)),
                ('net_total_capex', models.FloatField(blank=True, null=True)),
                ('fixed_cost', models.FloatField(blank=True, null=True)),
                ('alloc_fixed_cost', models.FloatField(blank=True, null=True)),
                ('var_gas_cost', models.FloatField(blank=True, null=True)),
                ('var_oil_cost', models.FloatField(blank=True, null=True)),
                ('var_water_cost', models.FloatField(blank=True, null=True)),
                ('doe', models.FloatField(blank=True, null=True)),
                ('gtp', models.FloatField(blank=True, null=True)),
                ('taxes', models.FloatField(blank=True, null=True)),
                ('loe', models.FloatField(blank=True, null=True)),
                ('cf', models.FloatField(blank=True, null=True)),
                ('fcf', models.FloatField(blank=True, null=True)),
                ('pv1', models.FloatField(blank=True, null=True)),
                ('pv1_rate', models.FloatField(blank=True, null=True)),
                ('pv2', models.FloatField(blank=True, null=True)),
                ('pv2_rate', models.FloatField(blank=True, null=True)),
                ('pv3', models.FloatField(blank=True, null=True)),
                ('pv3_rate', models.FloatField(blank=True, null=True)),
                ('pv4', models.FloatField(blank=True, null=True)),
                ('pv4_rate', models.FloatField(blank=True, null=True)),
                ('pv5', models.FloatField(blank=True, null=True)),
                ('pv5_rate', models.FloatField(blank=True, null=True)),
                ('pv6', models.FloatField(blank=True, null=True)),
                ('pv6_rate', models.FloatField(blank=True, null=True)),
                ('pv7', models.FloatField(blank=True, null=True)),
                ('pv7_rate', models.FloatField(blank=True, null=True)),
                ('pv8', models.FloatField(blank=True, null=True)),
                ('pv8_rate', models.FloatField(blank=True, null=True)),
                ('pv9', models.FloatField(blank=True, null=True)),
                ('pv9_rate', models.FloatField(blank=True, null=True)),
                ('pv10', models.FloatField(blank=True, null=True)),
                ('pv10_rate', models.FloatField(blank=True, null=True)),
                ('owner', models.CharField(blank=True, max_length=255, null=True)),
                ('version', models.DateTimeField(blank=True, null=True)),
                ('simulation', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('scenario', 'idp', 'owner', 'version', 'simulation')},
            },
        ),
        migrations.CreateModel(
            name='output_log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('output_scenario', models.CharField(max_length=100)),
                ('output_owner', models.CharField(max_length=255)),
                ('output_version', models.DateTimeField()),
                ('output_type', models.CharField(choices=[('deterministic', 'deterministic'), ('probabilistic', 'probabilistic')], max_length=25)),
                ('scenario', models.CharField(max_length=100)),
                ('scenario_owner', models.CharField(max_length=255)),
                ('scenario_version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('output_scenario', 'output_owner', 'output_version', 'output_type')},
            },
        ),
        migrations.CreateModel(
            name='output',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('deterministic', 'deterministic'), ('probabilistic', 'probabilistic')], max_length=25)),
                ('idp', models.CharField(max_length=100)),
                ('prod_date', models.DateField()),
                ('budget_type', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
                ('short_pad', models.CharField(max_length=100)),
                ('pad', models.CharField(max_length=200)),
                ('rig', models.CharField(max_length=100)),
                ('field', models.CharField(max_length=50)),
                ('time_on', models.IntegerField()),
                ('gas_eur', models.FloatField()),
                ('oil_eur', models.FloatField()),
                ('gross_gas_mult', models.FloatField()),
                ('gross_oil_mult', models.FloatField()),
                ('gross_water_mult', models.FloatField()),
                ('gross_gas', models.FloatField()),
                ('gross_oil', models.FloatField()),
                ('gross_water', models.FloatField()),
                ('ngl_yield', models.FloatField()),
                ('btu', models.FloatField()),
                ('shrink', models.FloatField()),
                ('wi', models.FloatField()),
                ('nri', models.FloatField()),
                ('royalty', models.FloatField()),
                ('net_gas', models.FloatField()),
                ('net_oil', models.FloatField()),
                ('net_ngl', models.FloatField()),
                ('net_mcfe', models.FloatField()),
                ('royalty_gas', models.FloatField()),
                ('royalty_oil', models.FloatField()),
                ('royalty_ngl', models.FloatField()),
                ('royalty_mcfe', models.FloatField()),
                ('hh', models.FloatField()),
                ('wti', models.FloatField()),
                ('ngl', models.FloatField()),
                ('cig', models.FloatField()),
                ('nwr', models.FloatField()),
                ('gas_basis', models.CharField(max_length=10)),
                ('gas_price_adj', models.FloatField()),
                ('gas_adj_unit', models.CharField(max_length=10)),
                ('oil_price_adj', models.FloatField()),
                ('oil_adj_unit', models.CharField(max_length=10)),
                ('ngl_price_adj', models.FloatField()),
                ('ngl_adj_unit', models.CharField(max_length=10)),
                ('realized_gas_price', models.FloatField()),
                ('realized_oil_price', models.FloatField()),
                ('realized_ngl_price', models.FloatField()),
                ('net_gas_rev', models.FloatField()),
                ('net_oil_rev', models.FloatField()),
                ('net_ngl_rev', models.FloatField()),
                ('net_total_rev', models.FloatField()),
                ('gross_drill_capex', models.FloatField()),
                ('gross_compl_capex', models.FloatField()),
                ('gross_misc_capex', models.FloatField()),
                ('gross_aban_capex', models.FloatField()),
                ('gross_total_capex', models.FloatField()),
                ('net_drill_capex', models.FloatField()),
                ('net_compl_capex', models.FloatField()),
                ('net_misc_capex', models.FloatField()),
                ('net_aban_capex', models.FloatField()),
                ('net_total_capex', models.FloatField()),
                ('fixed_cost', models.FloatField()),
                ('alloc_fixed_cost', models.FloatField()),
                ('var_gas_cost', models.FloatField()),
                ('var_oil_cost', models.FloatField()),
                ('var_water_cost', models.FloatField()),
                ('doe', models.FloatField()),
                ('gtp', models.FloatField()),
                ('taxes', models.FloatField()),
                ('loe', models.FloatField()),
                ('cf', models.FloatField()),
                ('fcf', models.FloatField()),
                ('pv1', models.FloatField()),
                ('pv1_rate', models.FloatField()),
                ('pv2', models.FloatField()),
                ('pv2_rate', models.FloatField()),
                ('pv3', models.FloatField()),
                ('pv3_rate', models.FloatField()),
                ('pv4', models.FloatField()),
                ('pv4_rate', models.FloatField()),
                ('pv5', models.FloatField()),
                ('pv5_rate', models.FloatField()),
                ('pv6', models.FloatField()),
                ('pv6_rate', models.FloatField()),
                ('pv7', models.FloatField()),
                ('pv7_rate', models.FloatField()),
                ('pv8', models.FloatField()),
                ('pv8_rate', models.FloatField()),
                ('pv9', models.FloatField()),
                ('pv9_rate', models.FloatField()),
                ('pv10', models.FloatField()),
                ('pv10_rate', models.FloatField()),
                ('active', models.IntegerField()),
                ('owner', models.CharField(max_length=255)),
                ('version', models.DateTimeField()),
                ('simulation', models.IntegerField()),
            ],
            options={
                'unique_together': {('scenario', 'idp', 'prod_date', 'owner', 'version', 'simulation')},
            },
        ),
        migrations.CreateModel(
            name='frameworks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(max_length=100)),
                ('effective_date', models.DateField()),
                ('life', models.IntegerField()),
                ('daily_output', models.BooleanField()),
                ('pv_spread', models.CharField(max_length=100)),
                ('owner', models.CharField(max_length=255)),
                ('version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('scenario', 'owner', 'version')},
            },
        ),
        migrations.CreateModel(
            name='forecasts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(max_length=100)),
                ('idp', models.CharField(max_length=100)),
                ('forecast_name', models.CharField(max_length=100)),
                ('forecast_type', models.CharField(max_length=100)),
                ('forecast_version', models.IntegerField()),
                ('owner', models.CharField(max_length=255)),
                ('version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('scenario', 'idp', 'owner', 'version')},
            },
        ),
        migrations.CreateModel(
            name='economics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scenario', models.CharField(max_length=100)),
                ('idp', models.CharField(max_length=100)),
                ('gross_gas_mult', models.CharField(max_length=255)),
                ('gross_oil_mult', models.CharField(max_length=255)),
                ('gross_water_mult', models.CharField(max_length=255)),
                ('btu_factor', models.FloatField()),
                ('shrink_factor', models.FloatField()),
                ('ngl_g_bpmm', models.FloatField()),
                ('wi_frac', models.FloatField()),
                ('nri_frac', models.FloatField()),
                ('roy_frac', models.FloatField()),
                ('cost_fixed', models.CharField(max_length=255)),
                ('cost_fixed_alloc', models.CharField(max_length=255)),
                ('cost_vargas', models.CharField(max_length=255)),
                ('cost_varoil', models.CharField(max_length=255)),
                ('cost_varwater', models.CharField(max_length=255)),
                ('cost_gtp', models.CharField(max_length=255)),
                ('tax_sev', models.CharField(max_length=255)),
                ('tax_adval', models.CharField(max_length=255)),
                ('inv_g_drill', models.FloatField()),
                ('inv_g_compl', models.FloatField()),
                ('inv_g_misc', models.CharField(max_length=255)),
                ('inv_g_aban', models.CharField(max_length=255)),
                ('gas_basis', models.CharField(max_length=15)),
                ('price_adj_gas', models.CharField(max_length=255)),
                ('price_adj_oil', models.CharField(max_length=255)),
                ('price_adj_ngl', models.CharField(max_length=255)),
                ('minimum_life', models.CharField(max_length=255)),
                ('owner', models.CharField(max_length=255)),
                ('version', models.DateTimeField()),
            ],
            options={
                'unique_together': {('scenario', 'idp', 'owner', 'version')},
            },
        ),
    ]
